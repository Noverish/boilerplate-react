{"version":3,"file":"static/js/304.04e37e34.chunk.js","mappings":"yRAcO,ICF6BA,EDEvBC,GCFuBD,EDEiD,CACnFE,KAAM,gBACNC,IAAK,gBAAGC,EAAK,EAALA,MAAK,MAAQ,CACnBC,IAAKD,EAAK,yEACVE,OAAQ,MACRC,OAAQ,CAAEC,EAAGJ,GACd,GCFM,CACLK,OAHa,SAACC,GAAI,OAAKC,EAAAA,EAAAA,GAHb,SAACD,GAAI,MAAK,CAACV,EAAOE,KAAMU,KAAKC,UAAUH,GAAI,CAGrBI,CAAIJ,IAAI,kBAF9B,SAACA,GAAI,OAAKK,EAAAA,EAAAA,GAASf,EAAOG,IAAIO,IAAIM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAI,GAAE,CAEhBf,CAAIO,EAAE,GAAE,CAAES,UAAWC,MAAYF,IAAI,I,mBCNxE,SAASG,EAAY,GAAqB,IAAnBC,EAAO,EAAPA,QACpC,OACE,iBAAKC,UAAU,cAAa,WAC1B,0BACE,gBAAKC,IAAKF,EAAQG,eAEpB,iBAAKF,UAAU,UAAS,WACtB,iBAAKA,UAAU,4BAA2B,WACxC,iBAAMA,UAAU,QAAO,SAAED,EAAQI,SACjC,SAACC,EAAA,EAAK,CAACJ,UAAU,mBAAkB,SAAED,EAAQM,eAE/C,gBAAKL,UAAU,cAAa,SAAED,EAAQO,eACtC,iBAAKN,UAAU,iBAAgB,WAC7B,iBAAKA,UAAU,gBAAe,WAC5B,6BAAOO,EAAAA,EAAAA,GAAE,qBAAqB,SAC9B,kBAAMP,UAAU,QAAO,UAAC,IAAED,EAAQS,UAClC,0BAAM,SACN,kBAAMR,UAAU,qBAAoB,UAAC,IAAED,EAAQU,0BAEjD,kBAAMT,UAAU,iBAAgB,WAAEO,EAAAA,EAAAA,GAAE,sBAAsB,KAAGR,EAAQW,cAEvE,iBAAKV,UAAU,SAAQ,WACrB,iBAAMA,UAAU,QAAO,SAAED,EAAQY,SACjC,kBAAMX,UAAU,gBAAe,WAAEO,EAAAA,EAAAA,GAAE,qBAAqB,KAAGR,EAAQa,iBAK7E,CC3Be,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BnC,EAAQkC,EAAaE,IAAI,eAAYC,EAE3C,GAAmCC,EAAAA,EAAAA,IAAmB,CAAEC,cAAe,CAAEvC,MAAAA,KAAjEwC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAOlB,EAA4B5C,EAAcQ,OAAO,CAAEL,MAAAA,IAA3C0C,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAEZC,EAAeF,EAASG,KAAI,SAAAhC,GAAC,OACjC,gBAAKM,UAAU,qBAAoB,UACjC,SAAC,EAAW,CAACD,QAASL,KADiBA,EAAEiC,GAErC,IAGR,OACE,gBAAK3B,UAAU,yBAAwB,UACrC,UAAC4B,EAAA,EAAS,YACR,gBAAK5B,UAAU,6BAA4B,UAAEO,EAAAA,EAAAA,GAAE,8BAC/C,SAACsB,EAAA,EAAI,CAAC7B,UAAU,OAAO8B,SAAUR,GAjBtB,SAAH,GAA8B,IAAxBzC,EAAK,EAALA,MAClBkC,EAAagB,IAAI,QAASlD,GAC1BmC,EAAgBD,EAClB,IAc8D,UACtD,UAACiB,EAAA,EAAU,YACT,SAACH,EAAA,WAAY,QAACI,aAAa1B,EAAAA,EAAAA,GAAE,0CAA8Cc,EAAS,YACpF,SAACa,EAAA,EAAM,CAACC,KAAK,SAAQ,UAAE5B,EAAAA,EAAAA,GAAE,2CAG7B,0BAAMA,EAAAA,EAAAA,GAAE,+BAAgC,CAACiB,OACzC,gBAAKxB,UAAU,oBAAmB,SAC/ByB,QAKX,C","sources":["api/product/product-search.ts","api/generate-query.ts","component/ProductView.tsx","page/product/ProductSearchPage.tsx"],"sourcesContent":["import { Product } from \"src/model\";\nimport { generateQuery } from \"../generate-query\";\n\nexport interface ProductSearchParams {\n  query?: string;\n}\n\nexport interface ProductSearchResult {\n  products: Product[];\n  total: number;\n  skip: number;\n  limit: number;\n}\n\nexport const productSearch = generateQuery<ProductSearchParams, ProductSearchResult>({\n  name: 'productSearch',\n  api: ({ query }) => ({\n    url: query ? `https://dummyjson.com/products/search` : `https://dummyjson.com/products`,\n    method: 'GET',\n    params: { q: query },\n  }),\n})\n","import { useQuery } from \"@tanstack/react-query\";\nimport axios, { AxiosRequestConfig } from \"axios\";\n\ninterface GenerateQueryOption<P> {\n  name: string;\n  api: (p: P) => AxiosRequestConfig<P>;\n}\n\ninterface GenerateQueryResult<P, R> {\n  useApi: (p: P) => R;\n}\n\nexport function generateQuery<P, R>(option: GenerateQueryOption<P>): GenerateQueryResult<P, R> {\n  const key = (p: P) => [option.name, JSON.stringify(p)];\n  const api = (p: P) => axios<R>(option.api(p)).then(v => v.data);\n\n  const useApi = (p: P) => useQuery(key(p), () => api(p), { staleTime: Infinity }).data!!;\n\n  return {\n    useApi,\n  };\n}\n","import { t } from \"i18next\";\nimport { Badge, Card } from \"react-bootstrap\";\nimport { Product } from \"src/model\";\n\nimport './ProductView.scss';\n\ninterface Props {\n  product: Product;\n}\n\nexport default function ProductView({ product }: Props) {\n  return (\n    <div className=\"ProductView\">\n      <div>\n        <img src={product.thumbnail} />\n      </div>\n      <div className=\"content\">\n        <div className=\"d-flex align-items-center\">\n          <span className=\"title\">{product.title}</span>\n          <Badge className=\"category ms-auto\">{product.category}</Badge>\n        </div>\n        <div className=\"description\">{product.description}</div>\n        <div className=\"d-flex mt-auto\">\n          <div className=\"price_section\">\n            <span>{t('ProductView.price')}: </span>\n            <span className=\"price\">${product.price}</span>\n            <span> &gt; </span>\n            <span className=\"discountPercentage\">${product.discountPercentage}</span>\n          </div>\n          <span className=\"rating ms-auto\">{t('ProductView.rating')}: {product.rating}</span>\n        </div>\n        <div className=\"d-flex\">\n          <span className=\"brand\">{product.brand}</span>\n          <span className=\"stock ms-auto\">{t('ProductView.stock')}: {product.stock}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { t } from \"i18next\";\nimport { Button, Container, Form, InputGroup } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { productSearch } from \"src/api/product/product-search\";\nimport ProductView from \"src/component/ProductView\";\n\ninterface FormState {\n  query: string;\n}\n\nexport default function ProductSearchPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || undefined;\n\n  const { register, handleSubmit } = useForm<FormState>({ defaultValues: { query }});\n\n  const onSearch = ({ query }: FormState) => {\n    searchParams.set('query', query);\n    setSearchParams(searchParams);\n  }\n\n  const { products, total } = productSearch.useApi({ query });\n\n  const productViews = products.map(v => (\n    <div className=\"py-2 border-bottom\" key={v.id}>\n      <ProductView product={v} />\n    </div>\n  ));\n\n  return (\n    <div className=\"ProductSearchPage pb-2\">\n      <Container>\n        <div className=\"display-1 mb-3 text-center\">{t('ProductSearchPage.title')}</div>\n        <Form className=\"mb-2\" onSubmit={handleSubmit(onSearch)}>\n          <InputGroup>\n            <Form.Control placeholder={t('ProductSearchPage.search-place-holder')} {...register('query')} />\n            <Button type=\"submit\">{t('ProductSearchPage.search-button')}</Button>\n          </InputGroup>\n        </Form>\n        <div>{t('ProductSearchPage.result-num', [total])}</div>\n        <div className=\"d-grid border-top\">\n          {productViews}\n        </div>\n      </Container>\n    </div>\n  )\n}\n"],"names":["option","productSearch","name","api","query","url","method","params","q","useApi","p","useQuery","JSON","stringify","key","axios","then","v","data","staleTime","Infinity","ProductView","product","className","src","thumbnail","title","Badge","category","description","t","price","discountPercentage","rating","brand","stock","ProductSearchPage","useSearchParams","searchParams","setSearchParams","get","undefined","useForm","defaultValues","register","handleSubmit","products","total","productViews","map","id","Container","Form","onSubmit","set","InputGroup","placeholder","Button","type"],"sourceRoot":""}